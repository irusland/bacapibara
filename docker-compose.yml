version: '3.4'

x-db-variables: &db-variables
  POSTGRES_DB: ${POSTGRES_DB:-postgres}
  POSTGRES_USER: ${POSTGRES_USER:-irusland}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-irusland}
  POSTGRES_HOST: ${POSTGRES_HOST:-db_1}
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}

services:
  db:
    image: postgres:latest
    environment:
      <<: *db-variables
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER:-irusland} -d ${POSTGRES_DB:-postgres}'" ]
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - backend

  db_2:
    image: postgres:latest
    environment:
      <<: *db-variables
      PGDATA: "/var/lib/pgdata"
    volumes:
      - ./postgres/db_2:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER:-irusland} -d ${POSTGRES_DB:-postgres}'" ]
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ${PWD}/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - metrics

  grafana:
    hostname: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    networks:
      - metrics
    volumes:
      - grafana-storage:/var/lib/grafana

  api:
    build:
      dockerfile: docker/Dockerfile
      context: .
    command:
      - python3
      - -m
      - uvicorn
      - api.main:app
      - --host
      - 0.0.0.0
    volumes:
      - ./:/app
    restart: unless-stopped
    environment:
      <<: *db-variables
    depends_on:
      prometheus:
        condition: service_started
      db:
        condition: service_healthy
    links:
      - db
    networks:
      - backend
      - metrics
    deploy:
      mode: replicated
      replicas: 3

  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs/cert.pem:/etc/nginx/cert.pem
      - ./certs/key.pem:/etc/nginx/key.pem
    ports:
      - "80:8080"
      - "443:443"
    networks:
      - backend

volumes:
  postgres_data:
  grafana-storage:
    external: true
networks:
  backend:
  metrics: